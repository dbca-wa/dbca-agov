<?php

/* Start Advanced DBCA Theme settings - IN DEVELOPMENT 
- Ryan Scott 
- 02/01/2019
- The idea is to make the theme editable via the settings, such as changing the theme background, color etc...
- Currently no variables are displayed in our twig files, we're just setting up
- For more on settings, visit: https://www.drupal.org/docs/8/theming-drupal-8/creating-advanced-theme-settings
*/
function dbca_agov_form_system_theme_settings_alter(&$form, Drupal\Core\Form\FormStateInterface $form_state) {

 $form['adv_header'] = array(
    '#type' => 'details',
    '#title' => t('Advanced header settings (IN DEVELOPMENT - not yet applied to the theme)'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#open' => FALSE, // Controls the HTML5 'open' attribute. Defaults to FALSE.
  );

  $form['adv_header']['homepage_image'] = array(
    '#type' => 'textfield',
    '#title' => t('Homepage header image'),
    '#default_value' => theme_get_setting('homepage_image', 'dbca_agov'),
    '#description'   => t("Enter a URL of the homepage header image i.e: (/sites/default/files/your-background.jpg). To remove the background image, blank this field and save the settings."),
  );

 $form['adv_header']['internal_image'] = array(
    '#type' => 'textfield',
    '#title' => t('Internal header image'),
    '#default_value' => theme_get_setting('internal_image', 'dbca_agov'),
    '#description'   => t("Enter a URL of the internal header image i.e: (/sites/default/files/your-background.jpg). To remove the background image, blank this field and save the settings."),
  );

  $form['adv_header']['header_bg'] = array(
    '#type' => 'file',
    '#title' => t('Upload header background image'),
    '#size' => 40,
    '#attributes' => array('enctype' => 'multipart/form-data'),
    '#description' => t('If you don\'t jave direct access to the server, use this field to upload your header background image. Uploads limited to .png .gif .jpg .jpeg .apng .svg extensions'),
    '#element_validate' => array('dbca_agov_header_bg_validate'),
  );

}


/**
* Implements hook_preprocess_html().
* Apply custom CSS for nodes
* Via https://drupal.stackexchange.com/questions/243846/add-taxonomy-id-class-to-the-body-tag-d8
*/
function dbca_agov_preprocess_html(&$variables) {

if ($node = \Drupal::request()->attributes->get('node')) {

  $variables['attributes']['class'][] = 'page-node-' . $node->id();
//$variables[['page_id'] = \Drupal::routeMatch()->getParameters()->get('Category');
}

if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $variables['page_id'] = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
}
else 
{

$node_id  = \Drupal::routeMatch()->getRawParameter('node');
if(!empty($node_id)) {

$node_storage = \Drupal::entityManager()->getStorage('node');
$node_details = $node_storage->load($node_id);

$field_names  = array_keys($node_details->getFields());
$field_name = 'field_category';

//$variables['page_id'] = 
		$ar  = $node_details->toArray();

if(!empty($ar['field_agency'][0]["target_id"])) {
$variables['page_id'] = $ar['field_agency'][0]["target_id"] ; }
if(!empty($ar['field_agency'][1]["target_id"])) {
$variables['parent_page_id'] =  $ar['field_agency'][1]["target_id"]; }


//foreach($ar as $fn) {
//foreach($fn as $gn) {

//foreach ($gn as $key => $value) {
//if($key == 'target_id')
//$variables['page_id'] = $variables['page_id'] .  $key .  $value;}
//}
//}


  //field_tags->entity->getVocabularyId();  ;
//>field_Category->value;

//Url::fromUri("internal:" . $source_uri->getRouteParameters();
//$current_route= \Drupal::routeMatch();

//if(isset($params['node'])) {
//$variables['page_id'] = $node;
//$variables['page_id'] = 

//}

}
}

}



/**
 * Check and save the uploaded header background image
 */
function dbca_agov_header_bg_validate($element, FormStateInterface $form_state) {
  global $base_url;

  $validators = array('file_validate_extensions' => array('png gif jpg jpeg apng svg'));
  $file = file_save_upload('header_bg', $validators, "public://", NULL, FILE_EXISTS_REPLACE);

  if (!empty($file)) {
    // change file's status from temporary to permanent and update file database
    if ((is_object($file[0]) == 1)) {
      $file[0]->status = FILE_STATUS_PERMANENT;
      $file[0]->save();
      $uri = $file[0]->getFileUri();
      $file_url = file_create_url($uri);
      $file_url = str_ireplace($base_url, '', $file_url);
      $form_state->setValue('homepage_image', $file_url);
    }
 }
}


/* End Advanced DBCA Theme settings */


function dbca_agov_preprocess_page(&$variables) {

  // Get our DBCA Advanced settings
  $variables['homepage_image'] = theme_get_setting('homepage_image','dbca_agov');
  $variables['internal_image'] = theme_get_setting('internal_image','dbca_agov');


      // Load the node entity from current route
        if ($node = \Drupal::routeMatch()->getParameter('node')) {

                // Load the label of the bundle
                    $bundle_label = \Drupal::entityTypeManager()
                          ->getStorage('node_type')
                                ->load($node->bundle())
                                      ->label();
                                          // Set the page title
         }
       else {
            $titles =    $variables['page']['#title'];
             $t = explode("|",$titles );
	if(!empty($t[0]))
 		{           
			//	 $variables['title'] = $t[0];
		}
 	if(!empty($t[1]))
		{            $variables['subti'] = $t[1]; 
		}
        }
}

function dbca_agov_preprocess_page_title(&$variables) {

 if ($node = \Drupal::routeMatch()->getParameter('node')) {
     }
 else {
//	if( $variable['page']['#title'] !== "") 
//	{	
		if(!empty($variables['page']['#title'])) {
       		$titles =    $variables['page']['#title'];
//			if( strpos($titles , "|") !== false) {  
			       $t = explode("|",$titles );
			if(!empty($t[0]))		
 			{		
				       $variables['title'] = $t[0];
			}
			if(!empty($t[1]))			
			{			       
						$variables['subti'] = $t[1];
			}

//	}
//	}

	}
 }
}


function dbca_agov_preprocess_breadcrumb(&$variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      if(!empty($variables['page']['#title'])) {
	$titles =    $variables['page']['#title'];
      $titles = $node->getTitle();
        if (!empty($titles)) {
           $t = explode("|",$titles );
           $variables['bread'] = $t[0];
//           $variables['breadcrumb'][] = array( 'text' => $t[0]);
        }
    }
   else {
     $request = \Drupal::request();
       $route_match = \Drupal::routeMatch();
       $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
        if (!empty($page_title)) {
       $t = explode("|",$page_title);
        //this variable will avaliable in twig file. 
        if(!empty($t[0]) && !empty($t[1])) {
	if($t[0] != "" && $t[1] != '') { 
//        $variables['breadcrumb'][] = array( 'text' => $t[0]); 
         $variables['bread'] = $t[0];
        }
	}
        else {
  //          $variables['breadcrumb'][] = array( 'text' => $page_title);
             $variables['bread'] = $page_title;
        }
	
        }
        
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function dbca_agov_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

