<?php

use Drupal\user\entity\User;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * @param \Drupal\user\entity\User $user
 *   User entity that is going to be updated.
 */
function webserver_auth_user_presave(User $user) {

  // Adding custom email if no email provided and we have appropriate setting set.
  if (!$user->getEmail()) {
    $config = \Drupal::config('webserver_auth.settings');
    if ($domain = $config->get('email_domain')) {

      // Create the email address by concatenating the name and domain (if there
      // is one) ensure we don't get double @ by removing them from the domain
      // first.
      $mail = strtolower($user->getUsername() . '@' . str_replace('@', '', $domain));

      // Replace any spaces with dots.
      $mail = str_replace(' ', '.', $mail);
      $user->setEmail($mail);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param $form
 *   Built form array.
 *
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *    Form stat object.
 *
 * @param $form_id
 *    Form ID.
 */
function webserver_auth_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $config = \Drupal::config('webserver_auth.settings');

  // Disable option to change username and give reason why.
  if ($config->get('disallow_username_change')) {
    $form['account']['name']['#disabled'] = TRUE;
    $form['account']['name']['#description'] = t('This value has been set by default from the browser login and cannot be changed.');
  }

  // Disable password fields and checking on user account edits.
  if ($config->get('disallow_pw_change')) {
    $form['account']['pass']['#access'] = FALSE;
    $form['account']['current_pass']['#access'] = FALSE;
    $form['account']['current_pass_required_values']['#access'] = FALSE;
  }
}